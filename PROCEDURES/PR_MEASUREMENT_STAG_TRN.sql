--------------------------------------------------------
--  DDL for Procedure PR_MEASUREMENT_STAG_TRN
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "ASB_STG"."PR_MEASUREMENT_STAG_TRN" (PI_LOAD_SEQ_NBR IN NUMBER,p_MEASR_COMP_TYPE_CD IN VARCHAR2)AS 
/**************************************************************************************
*
* Program Name           :PR_MEASUREMENT_STAG_TRN
* Author                 :IBM(Shailesh Solanki/Shailesh Solanki)
* Creation Date          :06-09-2021
* Description            :This is a PL/SQL procedure. This procedure transfer Operational VOLUMES data
*                         from MSM_STG2 tables to MSM Staging tables.
*                         D1_MSRMT
*
* Calling Program        :PR_ASB_LOAD_OPR_MEL_MAIN
* Input files            :None
* Output files           :None
* Input Parameter        :None
* Output Parameter       :None
* Modifications  History :None
*
* <DD-MM-YYYY>   <Modifier Name>    <Description>

**************************************************************************************/
BEGIN

-- Expected Volume
  IF (p_MEASR_COMP_TYPE_CD = 'SPBMUEXPVOL') THEN

 MERGE INTO CISADM.D1_MSRMT@STG_MSM_LINK S2
 USING (SELECT MEASR_COMP_ID,MSRMT_DTTM,BO_STATUS_CD,MSRMT_COND_FLG,MSRMT_USE_FLG,MSRMT_LOCAL_DTTM,MSRMT_VAL,ORIG_INIT_MSRMT_ID,PREV_MSRMT_DTTM
        ,MSRMT_VAL1,MSRMT_VAL2,MSRMT_VAL3,MSRMT_VAL4,MSRMT_VAL5,MSRMT_VAL6,MSRMT_VAL7,MSRMT_VAL8,MSRMT_VAL9,MSRMT_VAL10,BUS_OBJ_CD,CRE_DTTM,
         STATUS_UPD_DTTM,USER_EDITED_FLG,VERSION,LAST_UPDATE_DTTM,READING_VAL,COMBINED_MULTIPLIER,READING_COND_FLG FROM MSM_STG2.D1_MSRMT_EXPVOLUME) S1
 ON(S2.MEASR_COMP_ID=S1.MEASR_COMP_ID AND S2.MSRMT_DTTM=S1.MSRMT_DTTM )
 WHEN MATCHED THEN
 UPDATE SET BO_STATUS_CD=S1.BO_STATUS_CD,MSRMT_COND_FLG=S1.MSRMT_COND_FLG,MSRMT_USE_FLG=S1.MSRMT_USE_FLG,MSRMT_LOCAL_DTTM=S1.MSRMT_LOCAL_DTTM,
            MSRMT_VAL=S1.MSRMT_VAL,ORIG_INIT_MSRMT_ID=S1.ORIG_INIT_MSRMT_ID,PREV_MSRMT_DTTM=S1.PREV_MSRMT_DTTM,MSRMT_VAL1=S1.MSRMT_VAL1,
            MSRMT_VAL2=S1.MSRMT_VAL2,MSRMT_VAL3=S1.MSRMT_VAL3,MSRMT_VAL4=S1.MSRMT_VAL4,MSRMT_VAL5=S1.MSRMT_VAL5,MSRMT_VAL6=S1.MSRMT_VAL6,
            MSRMT_VAL7=S1.MSRMT_VAL7,MSRMT_VAL8=S1.MSRMT_VAL8,MSRMT_VAL9=S1.MSRMT_VAL9,MSRMT_VAL10=S1.MSRMT_VAL10,BUS_OBJ_CD=S1.BUS_OBJ_CD,
            CRE_DTTM=S1.CRE_DTTM,STATUS_UPD_DTTM=S1.STATUS_UPD_DTTM,USER_EDITED_FLG=S1.USER_EDITED_FLG,VERSION=S1.VERSION,
            LAST_UPDATE_DTTM=S1.LAST_UPDATE_DTTM,READING_VAL=S1.READING_VAL,COMBINED_MULTIPLIER=S1.COMBINED_MULTIPLIER,READING_COND_FLG=S1.READING_COND_FLG
 WHEN NOT MATCHED THEN
 INSERT (MEASR_COMP_ID,MSRMT_DTTM,BO_STATUS_CD,MSRMT_COND_FLG,MSRMT_USE_FLG,MSRMT_LOCAL_DTTM,MSRMT_VAL,ORIG_INIT_MSRMT_ID,PREV_MSRMT_DTTM
        ,MSRMT_VAL1,MSRMT_VAL2,MSRMT_VAL3,MSRMT_VAL4,MSRMT_VAL5,MSRMT_VAL6,MSRMT_VAL7,MSRMT_VAL8,MSRMT_VAL9,MSRMT_VAL10,BUS_OBJ_CD,CRE_DTTM,
         STATUS_UPD_DTTM,USER_EDITED_FLG,VERSION,LAST_UPDATE_DTTM,READING_VAL,COMBINED_MULTIPLIER,READING_COND_FLG)
 VALUES(S1.MEASR_COMP_ID,S1.MSRMT_DTTM,S1.BO_STATUS_CD,S1.MSRMT_COND_FLG,S1.MSRMT_USE_FLG,S1.MSRMT_LOCAL_DTTM,S1.MSRMT_VAL,S1.ORIG_INIT_MSRMT_ID,
        S1.PREV_MSRMT_DTTM,S1.MSRMT_VAL1,S1.MSRMT_VAL2,S1.MSRMT_VAL3,S1.MSRMT_VAL4,S1.MSRMT_VAL5,S1.MSRMT_VAL6,S1.MSRMT_VAL7,S1.MSRMT_VAL8,
        S1.MSRMT_VAL9,S1.MSRMT_VAL10,S1.BUS_OBJ_CD,S1.CRE_DTTM,S1.STATUS_UPD_DTTM,S1.USER_EDITED_FLG,S1.VERSION,S1.LAST_UPDATE_DTTM,S1.READING_VAL,
        S1.COMBINED_MULTIPLIER,S1.READING_COND_FLG);

--PR_DATA_MIGRATION_COUNT(pi_load_seq_nbr,'PR_MEASUREMENT_STAG_TRN','D1_MSRMT_EXPVOLUME');

  END IF;

  -- Metered Volume
  IF (p_MEASR_COMP_TYPE_CD = 'SPBMUMTRVOL') THEN 
  MERGE INTO CISADM.D1_MSRMT@STG_MSM_LINK S2
 USING (SELECT MEASR_COMP_ID,MSRMT_DTTM,BO_STATUS_CD,MSRMT_COND_FLG,MSRMT_USE_FLG,MSRMT_LOCAL_DTTM,MSRMT_VAL,ORIG_INIT_MSRMT_ID,PREV_MSRMT_DTTM
        ,MSRMT_VAL1,MSRMT_VAL2,MSRMT_VAL3,MSRMT_VAL4,MSRMT_VAL5,MSRMT_VAL6,MSRMT_VAL7,MSRMT_VAL8,MSRMT_VAL9,MSRMT_VAL10,BUS_OBJ_CD,CRE_DTTM,
         STATUS_UPD_DTTM,USER_EDITED_FLG,VERSION,LAST_UPDATE_DTTM,READING_VAL,COMBINED_MULTIPLIER,READING_COND_FLG FROM MSM_STG2.D1_MSRMT_MTRVOLUME) S1
 ON(S2.MEASR_COMP_ID=S1.MEASR_COMP_ID AND S2.MSRMT_DTTM=S1.MSRMT_DTTM )
 WHEN MATCHED THEN
 UPDATE SET BO_STATUS_CD=S1.BO_STATUS_CD,MSRMT_COND_FLG=S1.MSRMT_COND_FLG,MSRMT_USE_FLG=S1.MSRMT_USE_FLG,MSRMT_LOCAL_DTTM=S1.MSRMT_LOCAL_DTTM,
            MSRMT_VAL=S1.MSRMT_VAL,ORIG_INIT_MSRMT_ID=S1.ORIG_INIT_MSRMT_ID,PREV_MSRMT_DTTM=S1.PREV_MSRMT_DTTM,MSRMT_VAL1=S1.MSRMT_VAL1,
            MSRMT_VAL2=S1.MSRMT_VAL2,MSRMT_VAL3=S1.MSRMT_VAL3,MSRMT_VAL4=S1.MSRMT_VAL4,MSRMT_VAL5=S1.MSRMT_VAL5,MSRMT_VAL6=S1.MSRMT_VAL6,
            MSRMT_VAL7=S1.MSRMT_VAL7,MSRMT_VAL8=S1.MSRMT_VAL8,MSRMT_VAL9=S1.MSRMT_VAL9,MSRMT_VAL10=S1.MSRMT_VAL10,BUS_OBJ_CD=S1.BUS_OBJ_CD,
            CRE_DTTM=S1.CRE_DTTM,STATUS_UPD_DTTM=S1.STATUS_UPD_DTTM,USER_EDITED_FLG=S1.USER_EDITED_FLG,VERSION=S1.VERSION,
            LAST_UPDATE_DTTM=S1.LAST_UPDATE_DTTM,READING_VAL=S1.READING_VAL,COMBINED_MULTIPLIER=S1.COMBINED_MULTIPLIER,READING_COND_FLG=S1.READING_COND_FLG
 WHEN NOT MATCHED THEN
 INSERT (MEASR_COMP_ID,MSRMT_DTTM,BO_STATUS_CD,MSRMT_COND_FLG,MSRMT_USE_FLG,MSRMT_LOCAL_DTTM,MSRMT_VAL,ORIG_INIT_MSRMT_ID,PREV_MSRMT_DTTM
        ,MSRMT_VAL1,MSRMT_VAL2,MSRMT_VAL3,MSRMT_VAL4,MSRMT_VAL5,MSRMT_VAL6,MSRMT_VAL7,MSRMT_VAL8,MSRMT_VAL9,MSRMT_VAL10,BUS_OBJ_CD,CRE_DTTM,
         STATUS_UPD_DTTM,USER_EDITED_FLG,VERSION,LAST_UPDATE_DTTM,READING_VAL,COMBINED_MULTIPLIER,READING_COND_FLG)
 VALUES(S1.MEASR_COMP_ID,S1.MSRMT_DTTM,S1.BO_STATUS_CD,S1.MSRMT_COND_FLG,S1.MSRMT_USE_FLG,S1.MSRMT_LOCAL_DTTM,S1.MSRMT_VAL,S1.ORIG_INIT_MSRMT_ID,
        S1.PREV_MSRMT_DTTM,S1.MSRMT_VAL1,S1.MSRMT_VAL2,S1.MSRMT_VAL3,S1.MSRMT_VAL4,S1.MSRMT_VAL5,S1.MSRMT_VAL6,S1.MSRMT_VAL7,S1.MSRMT_VAL8,
        S1.MSRMT_VAL9,S1.MSRMT_VAL10,S1.BUS_OBJ_CD,S1.CRE_DTTM,S1.STATUS_UPD_DTTM,S1.USER_EDITED_FLG,S1.VERSION,S1.LAST_UPDATE_DTTM,S1.READING_VAL,
        S1.COMBINED_MULTIPLIER,S1.READING_COND_FLG);

--PR_DATA_MIGRATION_COUNT(pi_load_seq_nbr,'PR_MEASUREMENT_STAG_TRN','D1_MSRMT_MTRVOLUME');

  END IF;

  -- BO Volume
  IF (p_MEASR_COMP_TYPE_CD = 'BOVOLUME') THEN
  MERGE INTO CISADM.D1_MSRMT@STG_MSM_LINK S2
 USING (SELECT MEASR_COMP_ID,MSRMT_DTTM,BO_STATUS_CD,MSRMT_COND_FLG,MSRMT_USE_FLG,MSRMT_LOCAL_DTTM,MSRMT_VAL,ORIG_INIT_MSRMT_ID,PREV_MSRMT_DTTM
        ,MSRMT_VAL1,MSRMT_VAL2,MSRMT_VAL3,MSRMT_VAL4,MSRMT_VAL5,MSRMT_VAL6,MSRMT_VAL7,MSRMT_VAL8,MSRMT_VAL9,MSRMT_VAL10,BUS_OBJ_CD,CRE_DTTM,
         STATUS_UPD_DTTM,USER_EDITED_FLG,VERSION,LAST_UPDATE_DTTM,READING_VAL,COMBINED_MULTIPLIER,READING_COND_FLG FROM MSM_STG2.D1_MSRMT_BOVOLUME) S1
 ON(S2.MEASR_COMP_ID=S1.MEASR_COMP_ID AND S2.MSRMT_DTTM=S1.MSRMT_DTTM )
 WHEN MATCHED THEN
 UPDATE SET BO_STATUS_CD=S1.BO_STATUS_CD,MSRMT_COND_FLG=S1.MSRMT_COND_FLG,MSRMT_USE_FLG=S1.MSRMT_USE_FLG,MSRMT_LOCAL_DTTM=S1.MSRMT_LOCAL_DTTM,
            MSRMT_VAL=S1.MSRMT_VAL,ORIG_INIT_MSRMT_ID=S1.ORIG_INIT_MSRMT_ID,PREV_MSRMT_DTTM=S1.PREV_MSRMT_DTTM,MSRMT_VAL1=S1.MSRMT_VAL1,
            MSRMT_VAL2=S1.MSRMT_VAL2,MSRMT_VAL3=S1.MSRMT_VAL3,MSRMT_VAL4=S1.MSRMT_VAL4,MSRMT_VAL5=S1.MSRMT_VAL5,MSRMT_VAL6=S1.MSRMT_VAL6,
            MSRMT_VAL7=S1.MSRMT_VAL7,MSRMT_VAL8=S1.MSRMT_VAL8,MSRMT_VAL9=S1.MSRMT_VAL9,MSRMT_VAL10=S1.MSRMT_VAL10,BUS_OBJ_CD=S1.BUS_OBJ_CD,
            CRE_DTTM=S1.CRE_DTTM,STATUS_UPD_DTTM=S1.STATUS_UPD_DTTM,USER_EDITED_FLG=S1.USER_EDITED_FLG,VERSION=S1.VERSION,
            LAST_UPDATE_DTTM=S1.LAST_UPDATE_DTTM,READING_VAL=S1.READING_VAL,COMBINED_MULTIPLIER=S1.COMBINED_MULTIPLIER,READING_COND_FLG=S1.READING_COND_FLG
 WHEN NOT MATCHED THEN
 INSERT (MEASR_COMP_ID,MSRMT_DTTM,BO_STATUS_CD,MSRMT_COND_FLG,MSRMT_USE_FLG,MSRMT_LOCAL_DTTM,MSRMT_VAL,ORIG_INIT_MSRMT_ID,PREV_MSRMT_DTTM
        ,MSRMT_VAL1,MSRMT_VAL2,MSRMT_VAL3,MSRMT_VAL4,MSRMT_VAL5,MSRMT_VAL6,MSRMT_VAL7,MSRMT_VAL8,MSRMT_VAL9,MSRMT_VAL10,BUS_OBJ_CD,CRE_DTTM,
         STATUS_UPD_DTTM,USER_EDITED_FLG,VERSION,LAST_UPDATE_DTTM,READING_VAL,COMBINED_MULTIPLIER,READING_COND_FLG)
 VALUES(S1.MEASR_COMP_ID,S1.MSRMT_DTTM,S1.BO_STATUS_CD,S1.MSRMT_COND_FLG,S1.MSRMT_USE_FLG,S1.MSRMT_LOCAL_DTTM,S1.MSRMT_VAL,S1.ORIG_INIT_MSRMT_ID,
        S1.PREV_MSRMT_DTTM,S1.MSRMT_VAL1,S1.MSRMT_VAL2,S1.MSRMT_VAL3,S1.MSRMT_VAL4,S1.MSRMT_VAL5,S1.MSRMT_VAL6,S1.MSRMT_VAL7,S1.MSRMT_VAL8,
        S1.MSRMT_VAL9,S1.MSRMT_VAL10,S1.BUS_OBJ_CD,S1.CRE_DTTM,S1.STATUS_UPD_DTTM,S1.USER_EDITED_FLG,S1.VERSION,S1.LAST_UPDATE_DTTM,S1.READING_VAL,
        S1.COMBINED_MULTIPLIER,S1.READING_COND_FLG);

--PR_DATA_MIGRATION_COUNT(pi_load_seq_nbr,'PR_MEASUREMENT_STAG_TRN','D1_MSRMT_BOVOLUME');

  END IF;

  -- FPN Volume
  IF (p_MEASR_COMP_TYPE_CD = 'FPNVOLUME') THEN 
  MERGE INTO CISADM.D1_MSRMT@STG_MSM_LINK S2
 USING (SELECT MEASR_COMP_ID,MSRMT_DTTM,BO_STATUS_CD,MSRMT_COND_FLG,MSRMT_USE_FLG,MSRMT_LOCAL_DTTM,MSRMT_VAL,ORIG_INIT_MSRMT_ID,PREV_MSRMT_DTTM
        ,MSRMT_VAL1,MSRMT_VAL2,MSRMT_VAL3,MSRMT_VAL4,MSRMT_VAL5,MSRMT_VAL6,MSRMT_VAL7,MSRMT_VAL8,MSRMT_VAL9,MSRMT_VAL10,BUS_OBJ_CD,CRE_DTTM,
         STATUS_UPD_DTTM,USER_EDITED_FLG,VERSION,LAST_UPDATE_DTTM,READING_VAL,COMBINED_MULTIPLIER,READING_COND_FLG FROM MSM_STG2.D1_MSRMT_FPNVOLUME) S1
 ON(S2.MEASR_COMP_ID=S1.MEASR_COMP_ID AND S2.MSRMT_DTTM=S1.MSRMT_DTTM )
 WHEN MATCHED THEN
 UPDATE SET BO_STATUS_CD=S1.BO_STATUS_CD,MSRMT_COND_FLG=S1.MSRMT_COND_FLG,MSRMT_USE_FLG=S1.MSRMT_USE_FLG,MSRMT_LOCAL_DTTM=S1.MSRMT_LOCAL_DTTM,
            MSRMT_VAL=S1.MSRMT_VAL,ORIG_INIT_MSRMT_ID=S1.ORIG_INIT_MSRMT_ID,PREV_MSRMT_DTTM=S1.PREV_MSRMT_DTTM,MSRMT_VAL1=S1.MSRMT_VAL1,
            MSRMT_VAL2=S1.MSRMT_VAL2,MSRMT_VAL3=S1.MSRMT_VAL3,MSRMT_VAL4=S1.MSRMT_VAL4,MSRMT_VAL5=S1.MSRMT_VAL5,MSRMT_VAL6=S1.MSRMT_VAL6,
            MSRMT_VAL7=S1.MSRMT_VAL7,MSRMT_VAL8=S1.MSRMT_VAL8,MSRMT_VAL9=S1.MSRMT_VAL9,MSRMT_VAL10=S1.MSRMT_VAL10,BUS_OBJ_CD=S1.BUS_OBJ_CD,
            CRE_DTTM=S1.CRE_DTTM,STATUS_UPD_DTTM=S1.STATUS_UPD_DTTM,USER_EDITED_FLG=S1.USER_EDITED_FLG,VERSION=S1.VERSION,
            LAST_UPDATE_DTTM=S1.LAST_UPDATE_DTTM,READING_VAL=S1.READING_VAL,COMBINED_MULTIPLIER=S1.COMBINED_MULTIPLIER,READING_COND_FLG=S1.READING_COND_FLG
 WHEN NOT MATCHED THEN
 INSERT (MEASR_COMP_ID,MSRMT_DTTM,BO_STATUS_CD,MSRMT_COND_FLG,MSRMT_USE_FLG,MSRMT_LOCAL_DTTM,MSRMT_VAL,ORIG_INIT_MSRMT_ID,PREV_MSRMT_DTTM
        ,MSRMT_VAL1,MSRMT_VAL2,MSRMT_VAL3,MSRMT_VAL4,MSRMT_VAL5,MSRMT_VAL6,MSRMT_VAL7,MSRMT_VAL8,MSRMT_VAL9,MSRMT_VAL10,BUS_OBJ_CD,CRE_DTTM,
         STATUS_UPD_DTTM,USER_EDITED_FLG,VERSION,LAST_UPDATE_DTTM,READING_VAL,COMBINED_MULTIPLIER,READING_COND_FLG)
 VALUES(S1.MEASR_COMP_ID,S1.MSRMT_DTTM,S1.BO_STATUS_CD,S1.MSRMT_COND_FLG,S1.MSRMT_USE_FLG,S1.MSRMT_LOCAL_DTTM,S1.MSRMT_VAL,S1.ORIG_INIT_MSRMT_ID,
        S1.PREV_MSRMT_DTTM,S1.MSRMT_VAL1,S1.MSRMT_VAL2,S1.MSRMT_VAL3,S1.MSRMT_VAL4,S1.MSRMT_VAL5,S1.MSRMT_VAL6,S1.MSRMT_VAL7,S1.MSRMT_VAL8,
        S1.MSRMT_VAL9,S1.MSRMT_VAL10,S1.BUS_OBJ_CD,S1.CRE_DTTM,S1.STATUS_UPD_DTTM,S1.USER_EDITED_FLG,S1.VERSION,S1.LAST_UPDATE_DTTM,S1.READING_VAL,
        S1.COMBINED_MULTIPLIER,S1.READING_COND_FLG);

--PR_DATA_MIGRATION_COUNT(pi_load_seq_nbr,'PR_MEASUREMENT_STAG_TRN','D1_MSRMT_FPNVOLUME');

  END IF;

  -- Imbalance Volume
  IF (p_MEASR_COMP_TYPE_CD = 'SPBMUIMBVOL') THEN
  MERGE INTO CISADM.D1_MSRMT@STG_MSM_LINK S2
 USING (SELECT MEASR_COMP_ID,MSRMT_DTTM,BO_STATUS_CD,MSRMT_COND_FLG,MSRMT_USE_FLG,MSRMT_LOCAL_DTTM,MSRMT_VAL,ORIG_INIT_MSRMT_ID,PREV_MSRMT_DTTM
        ,MSRMT_VAL1,MSRMT_VAL2,MSRMT_VAL3,MSRMT_VAL4,MSRMT_VAL5,MSRMT_VAL6,MSRMT_VAL7,MSRMT_VAL8,MSRMT_VAL9,MSRMT_VAL10,BUS_OBJ_CD,CRE_DTTM,
         STATUS_UPD_DTTM,USER_EDITED_FLG,VERSION,LAST_UPDATE_DTTM,READING_VAL,COMBINED_MULTIPLIER,READING_COND_FLG FROM MSM_STG2.D1_MSRMT_IMBVOLUME) S1
 ON(S2.MEASR_COMP_ID=S1.MEASR_COMP_ID AND S2.MSRMT_DTTM=S1.MSRMT_DTTM )
 WHEN MATCHED THEN
 UPDATE SET BO_STATUS_CD=S1.BO_STATUS_CD,MSRMT_COND_FLG=S1.MSRMT_COND_FLG,MSRMT_USE_FLG=S1.MSRMT_USE_FLG,MSRMT_LOCAL_DTTM=S1.MSRMT_LOCAL_DTTM,
            MSRMT_VAL=S1.MSRMT_VAL,ORIG_INIT_MSRMT_ID=S1.ORIG_INIT_MSRMT_ID,PREV_MSRMT_DTTM=S1.PREV_MSRMT_DTTM,MSRMT_VAL1=S1.MSRMT_VAL1,
            MSRMT_VAL2=S1.MSRMT_VAL2,MSRMT_VAL3=S1.MSRMT_VAL3,MSRMT_VAL4=S1.MSRMT_VAL4,MSRMT_VAL5=S1.MSRMT_VAL5,MSRMT_VAL6=S1.MSRMT_VAL6,
            MSRMT_VAL7=S1.MSRMT_VAL7,MSRMT_VAL8=S1.MSRMT_VAL8,MSRMT_VAL9=S1.MSRMT_VAL9,MSRMT_VAL10=S1.MSRMT_VAL10,BUS_OBJ_CD=S1.BUS_OBJ_CD,
            CRE_DTTM=S1.CRE_DTTM,STATUS_UPD_DTTM=S1.STATUS_UPD_DTTM,USER_EDITED_FLG=S1.USER_EDITED_FLG,VERSION=S1.VERSION,
            LAST_UPDATE_DTTM=S1.LAST_UPDATE_DTTM,READING_VAL=S1.READING_VAL,COMBINED_MULTIPLIER=S1.COMBINED_MULTIPLIER,READING_COND_FLG=S1.READING_COND_FLG
 WHEN NOT MATCHED THEN
 INSERT (MEASR_COMP_ID,MSRMT_DTTM,BO_STATUS_CD,MSRMT_COND_FLG,MSRMT_USE_FLG,MSRMT_LOCAL_DTTM,MSRMT_VAL,ORIG_INIT_MSRMT_ID,PREV_MSRMT_DTTM
        ,MSRMT_VAL1,MSRMT_VAL2,MSRMT_VAL3,MSRMT_VAL4,MSRMT_VAL5,MSRMT_VAL6,MSRMT_VAL7,MSRMT_VAL8,MSRMT_VAL9,MSRMT_VAL10,BUS_OBJ_CD,CRE_DTTM,
         STATUS_UPD_DTTM,USER_EDITED_FLG,VERSION,LAST_UPDATE_DTTM,READING_VAL,COMBINED_MULTIPLIER,READING_COND_FLG)
 VALUES(S1.MEASR_COMP_ID,S1.MSRMT_DTTM,S1.BO_STATUS_CD,S1.MSRMT_COND_FLG,S1.MSRMT_USE_FLG,S1.MSRMT_LOCAL_DTTM,S1.MSRMT_VAL,S1.ORIG_INIT_MSRMT_ID,
        S1.PREV_MSRMT_DTTM,S1.MSRMT_VAL1,S1.MSRMT_VAL2,S1.MSRMT_VAL3,S1.MSRMT_VAL4,S1.MSRMT_VAL5,S1.MSRMT_VAL6,S1.MSRMT_VAL7,S1.MSRMT_VAL8,
        S1.MSRMT_VAL9,S1.MSRMT_VAL10,S1.BUS_OBJ_CD,S1.CRE_DTTM,S1.STATUS_UPD_DTTM,S1.USER_EDITED_FLG,S1.VERSION,S1.LAST_UPDATE_DTTM,S1.READING_VAL,
        S1.COMBINED_MULTIPLIER,S1.READING_COND_FLG);

--PR_DATA_MIGRATION_COUNT(pi_load_seq_nbr,'PR_MEASUREMENT_STAG_TRN','D1_MSRMT_IMBVOLUME');

  END IF;
--Exceptions
  ASB_STG.PR_PROCESS_LOG('PR_MEASUREMENT_STAG_TRN',pi_load_seq_nbr,'SUCCESS','Latest data transfer successful from STG2 to MSMS Staging');
  EXCEPTION WHEN NO_DATA_FOUND THEN
    ASB_STG.PR_PROCESS_LOG('PR_MEASUREMENT_STAG_TRN',pi_load_seq_nbr,'SUCCESS','No new data found to transfer  '||pi_load_seq_nbr);
  WHEN OTHERS THEN   
  ASB_STG.PR_PROCESS_LOG('PR_MEASUREMENT_STAG_TRN',pi_load_seq_nbr,'FAILURE',SQLERRM); 

END PR_MEASUREMENT_STAG_TRN;

/

