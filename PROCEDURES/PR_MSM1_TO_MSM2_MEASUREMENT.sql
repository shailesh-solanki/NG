--------------------------------------------------------
--  DDL for Procedure PR_MSM1_TO_MSM2_MEASUREMENT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "ASB_STG"."PR_MSM1_TO_MSM2_MEASUREMENT" (PI_LOAD_SEQ_NBR IN NUMBER,p_MEASR_COMP_TYPE_CD IN VARCHAR2)AS 
/**************************************************************************************
*
* Program Name           :PR_MSM1_TO_MSM2_MEASUREMENT
* Author                 :IBM(Shailesh Solanki/Shailesh Solanki)
* Creation Date          :04-09-2021
* Description            :This is a PL/SQL procedure. This procedure transfer D1_MSRMT(BO, FPN, Expected, Metered, IM Balance) data 
*                         from MSM_STG1 tables to MSM_STG2 tables.
*
* Calling Program        :PR_ASB_LOAD_OPR_GENVOL_MAIN
* Called Program         :None
*                         
*
* Input files            :None
* Output files           :None
* Input Parameter        :pi_load_seq_nbr
* Output Parameter       :None
* Modifications  History :None
*
* <DD-MM-YYYY>   <Modifier Name>    <Description>
*  
**************************************************************************************/
BEGIN

  --Inserting records into D1_MSRMT TABlE in MSM_STG2 schema

    -- Expected Volume
  IF (p_MEASR_COMP_TYPE_CD = 'SPBMUEXPVOL') THEN

      DELETE FROM MSM_STG2.D1_MSRMT_EXPVOLUME;

      INSERT INTO MSM_STG2.D1_MSRMT_EXPVOLUME
      SELECT MEASR_COMP_ID,MSRMT_DTTM,BO_STATUS_CD,MSRMT_COND_FLG,MSRMT_USE_FLG,MSRMT_LOCAL_DTTM,MSRMT_VAL,' ',PREV_MSRMT_DTTM
            ,MSRMT_VAL1,MSRMT_VAL2,MSRMT_VAL3,MSRMT_VAL4,MSRMT_VAL5,MSRMT_VAL6,MSRMT_VAL7,MSRMT_VAL8,MSRMT_VAL9,MSRMT_VAL10,BUS_OBJ_CD,CRE_DTTM,
             STATUS_UPD_DTTM,USER_EDITED_FLG,VERSION,LAST_UPDATE_DTTM,READING_VAL,COMBINED_MULTIPLIER,READING_COND_FLG 
      FROM MSM_STG1.D1_MSRMT_EXPVOLUME
      WHERE LOAD_SEQ_NBR=PI_LOAD_SEQ_NBR;
--      AND trim(ORIG_INIT_MSRMT_ID)=p_MEASR_COMP_TYPE_CD;
  END IF;

  -- Metered Volume
  IF (p_MEASR_COMP_TYPE_CD = 'SPBMUMTRVOL') THEN  

      DELETE FROM MSM_STG2.D1_MSRMT_MTRVOLUME;

      INSERT INTO MSM_STG2.D1_MSRMT_MTRVOLUME
      SELECT MEASR_COMP_ID,MSRMT_DTTM,BO_STATUS_CD,MSRMT_COND_FLG,MSRMT_USE_FLG,MSRMT_LOCAL_DTTM,MSRMT_VAL,' ',PREV_MSRMT_DTTM
            ,MSRMT_VAL1,MSRMT_VAL2,MSRMT_VAL3,MSRMT_VAL4,MSRMT_VAL5,MSRMT_VAL6,MSRMT_VAL7,MSRMT_VAL8,MSRMT_VAL9,MSRMT_VAL10,BUS_OBJ_CD,CRE_DTTM,
             STATUS_UPD_DTTM,USER_EDITED_FLG,VERSION,LAST_UPDATE_DTTM,READING_VAL,COMBINED_MULTIPLIER,READING_COND_FLG 
      FROM MSM_STG1.D1_MSRMT_MTRVOLUME
      WHERE LOAD_SEQ_NBR=PI_LOAD_SEQ_NBR;
--      AND trim(ORIG_INIT_MSRMT_ID)=p_MEASR_COMP_TYPE_CD;
  END IF;

  -- BO Volume
  IF (p_MEASR_COMP_TYPE_CD = 'BOVOLUME') THEN 

    DELETE FROM MSM_STG2.D1_MSRMT_BOVOLUME;

      INSERT INTO MSM_STG2.D1_MSRMT_BOVOLUME
      SELECT MEASR_COMP_ID,MSRMT_DTTM,BO_STATUS_CD,MSRMT_COND_FLG,MSRMT_USE_FLG,MSRMT_LOCAL_DTTM,MSRMT_VAL,' ',PREV_MSRMT_DTTM
            ,MSRMT_VAL1,MSRMT_VAL2,MSRMT_VAL3,MSRMT_VAL4,MSRMT_VAL5,MSRMT_VAL6,MSRMT_VAL7,MSRMT_VAL8,MSRMT_VAL9,MSRMT_VAL10,BUS_OBJ_CD,CRE_DTTM,
             STATUS_UPD_DTTM,USER_EDITED_FLG,VERSION,LAST_UPDATE_DTTM,READING_VAL,COMBINED_MULTIPLIER,READING_COND_FLG 
      FROM MSM_STG1.D1_MSRMT_BOVOLUME
      WHERE LOAD_SEQ_NBR=PI_LOAD_SEQ_NBR;
--      AND trim(ORIG_INIT_MSRMT_ID)=p_MEASR_COMP_TYPE_CD;
  END IF;

  -- FPN Volume
  IF (p_MEASR_COMP_TYPE_CD = 'FPNVOLUME') THEN 

  DELETE FROM MSM_STG2.D1_MSRMT_FPNVOLUME;

      INSERT INTO MSM_STG2.D1_MSRMT_FPNVOLUME
      SELECT MEASR_COMP_ID,MSRMT_DTTM,BO_STATUS_CD,MSRMT_COND_FLG,MSRMT_USE_FLG,MSRMT_LOCAL_DTTM,MSRMT_VAL,' ',PREV_MSRMT_DTTM
            ,MSRMT_VAL1,MSRMT_VAL2,MSRMT_VAL3,MSRMT_VAL4,MSRMT_VAL5,MSRMT_VAL6,MSRMT_VAL7,MSRMT_VAL8,MSRMT_VAL9,MSRMT_VAL10,BUS_OBJ_CD,CRE_DTTM,
             STATUS_UPD_DTTM,USER_EDITED_FLG,VERSION,LAST_UPDATE_DTTM,READING_VAL,COMBINED_MULTIPLIER,READING_COND_FLG 
      FROM MSM_STG1.D1_MSRMT_FPNVOLUME
      WHERE LOAD_SEQ_NBR=PI_LOAD_SEQ_NBR;
--      AND trim(ORIG_INIT_MSRMT_ID)=p_MEASR_COMP_TYPE_CD;
  END IF;

  -- Imbalance Volume
  IF (p_MEASR_COMP_TYPE_CD = 'SPBMUIMBVOL') THEN 

  DELETE FROM MSM_STG2.D1_MSRMT_IMBVOLUME;

      INSERT INTO MSM_STG2.D1_MSRMT_IMBVOLUME
      SELECT MEASR_COMP_ID,MSRMT_DTTM,BO_STATUS_CD,MSRMT_COND_FLG,MSRMT_USE_FLG,MSRMT_LOCAL_DTTM,MSRMT_VAL,' ',PREV_MSRMT_DTTM
            ,MSRMT_VAL1,MSRMT_VAL2,MSRMT_VAL3,MSRMT_VAL4,MSRMT_VAL5,MSRMT_VAL6,MSRMT_VAL7,MSRMT_VAL8,MSRMT_VAL9,MSRMT_VAL10,BUS_OBJ_CD,CRE_DTTM,
             STATUS_UPD_DTTM,USER_EDITED_FLG,VERSION,LAST_UPDATE_DTTM,READING_VAL,COMBINED_MULTIPLIER,READING_COND_FLG 
      FROM MSM_STG1.D1_MSRMT_IMBVOLUME
      WHERE LOAD_SEQ_NBR=PI_LOAD_SEQ_NBR;
--      AND trim(ORIG_INIT_MSRMT_ID)=p_MEASR_COMP_TYPE_CD;
  END IF;

  ASB_STG.PR_PROCESS_LOG('PR_MSM1_TO_MSM2_MEASUREMENT',pi_load_seq_nbr,'SUCCESS', 'Measurement(VOLUMES) data migrated successfully from MSM_STG1 to MSM_STG2 schema');

EXCEPTION
   WHEN OTHERS then
   ASB_STG.PR_PROCESS_LOG('PR_MSM1_TO_MSM2_MEASUREMENT',pi_load_seq_nbr,'FAILURE', 'Failed while migrating Measurement(VOLUMES) data  from MSM_STG1 to MSM_STG2 schema');

END PR_MSM1_TO_MSM2_MEASUREMENT;

/

